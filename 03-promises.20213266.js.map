{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAIAC,SAASC,cAAc,SAASC,iBAAiB,UAAWC,IAC1DA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAQC,SAASJ,EAASK,IAAI,UAC9BC,EAAOF,SAASJ,EAASK,IAAI,UA8BrC,SAAwBE,EAAQC,EAAOF,GACrC,MAAMG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BD,EAASE,KAAK,CAAEC,SAAUF,EAAI,EAAGF,MAAOA,EAAQE,EAAIJ,IAEtD,OAAOO,QAAQC,QAAQL,E,EAhCvBM,CAFeX,SAASJ,EAASK,IAAI,WAEdF,EAAOG,GAC3BU,MAAMP,IACLA,EAASQ,SAAQ,EAAGL,SAAAM,EAAUV,MAAAW,MAYpC,IAAuBP,EAAUJ,GAAVI,EAXDM,EAWWV,EAXDW,EAYvB,IAAIN,SAAQ,CAACC,EAASM,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCT,EAAQ,C,SAAEF,E,MAAUJ,IAEpBY,EAAO,C,SAAER,E,MAAUJ,GAAQ,GAE5BA,EAAM,KAnBFQ,MAAK,EAACJ,SAAEA,EAAQJ,MAAEA,MACjBgB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqBd,QAAiBJ,MAAU,IAEzEmB,OAAM,EAACf,SAAEA,EAAQJ,MAAEA,MAClBgB,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBhB,QAAeJ,MAAU,GACrE,GACJ,GACF","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport flatpickr from 'flatpickr';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\ndocument.querySelector('.form').addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  createPromises(amount, delay, step)\n    .then((promises) => {\n      promises.forEach(({ position, delay }) => {\n        createPromise(position, delay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      });\n    });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(amount, delay, step) {\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    promises.push({ position: i + 1, delay: delay + i * step });\n  }\n  return Promise.resolve(promises);\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","formData","FormData","target","delay1","parseInt","get","step","amount","delay","promises","i","push","position","Promise","resolve","$47d4ff9957288465$var$createPromises","then","forEach","position1","delay2","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.20213266.js.map"}